---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.16.10
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    replicas: 1
    deploymentStrategy:
      type: RollingUpdate
    admin:
      existingSecret: grafana
      userKey: adminUser
      passwordKey: adminPass
    grafana.ini:
      analytics:
        check_for_updates: false
      auth:
        signout_redirect_url: "https://id.${SECRET_DOMAIN}/application/o/grafana/end-session/"
        oauth_auto_login: true
      auth.basic:
        disable_login_form: false
      auth.generic_oauth:
        enabled: true
        name: authentik
        client_id: "${GRAFANA_OAUTH_CLIENT_ID}"
        client_secret: "${GRAFANA_OAUTH_CLIENT_SECRET}"
        scopes: "openid email profile"
        auth_url: https://id.${SECRET_DOMAIN}/application/o/authorize/
        token_url: https://id.${SECRET_DOMAIN}/application/o/token/
        api_url: https://id.${SECRET_DOMAIN}/application/o/userinfo/
        role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
      date_formats:
        default_timezone: "America/New_York"
      explore:
        enabled: true
      grafana_net:
        url: https://grafana.net
      log:
        mode: console
        filters: rendering:debug
      paths:
        data: /var/lib/grafana
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      panels:
        disable_sanitize_html: true
      server:
        root_url: "https://grafana.${SECRET_DOMAIN}"
    serviceMonitor:
      enabled: true
    persistence:
      enabled: false
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      path: /
      tls:
        - secretName: grafana-tls
          hosts:
            - "grafana.${SECRET_DOMAIN}"
    plugins:
      - grafana-piechart-panel
      - grafana-polystat-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - grafana-singlestat-panel
      - mxswat-separator-panel
      - farski-blendstat-panel
      - speakyourcode-button-panel
      - snuids-trafficlights-panel
    imageRenderer:
      enabled: true
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query:9090/
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/13665
        speedtest:
          gnetId: 13665
          revision: 1
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/14127
        metallb:
          gnetId: 14127
          revision: 1
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/14420
        mikrotik:
          gnetId: 14420
          revision: 5
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/14371
        nut:
          gnetId: 14371
          revision: 1
          datasource: Prometheus

        # Ref: https://grafana.com/grafana/dashboards/12275
        blackbox:
          url: https://raw.githubusercontent.com/jr0dd/grafana-dashboards/main/blackbox.json
          datasource: Prometheus
        blocky:
          url: https://raw.githubusercontent.com/jr0dd/grafana-dashboards/main/blocky.json
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        coredns:
          url: https://raw.githubusercontent.com/jr0dd/grafana-dashboards/main/coredns.json
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        lidarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/lidarr.json
          datasource: Prometheus
        minio-overview:
          url: https://raw.githubusercontent.com/jr0dd/grafana-dashboards/main/minio.json
          datasource: Prometheus
        qbittorrent:
          url: https://raw.githubusercontent.com/esanchezm/prometheus-qbittorrent-exporter/master/grafana/dashboard.json
          datasource: Prometheus
        radarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/radarr.json
          datasource: Prometheus
        sonarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/sonarr.json
          datasource: Prometheus
        thanos-overview:
          url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/overview.json
          datasource: Prometheus
        thanos-compact:
          url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/compact.json
          datasource: Prometheus
        thanos-query:
          url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/query.json
          datasource: Prometheus
        thanos-store:
          url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/store.json
          datasource: Prometheus
        thanos-sidecar:
          url: https://raw.githubusercontent.com/jr0dd/grafana-dashboards/main/thanos-sidecar.json
          datasource: Prometheus
        traefik:
          url: https://raw.githubusercontent.com/jr0dd/grafana-dashboards/main/traefik.json
          datasource: Prometheus
        zfs-localpv:
          url: https://raw.githubusercontent.com/openebs/monitoring/openebs-monitoring-0.4.7/deploy/charts/dashboards/zfsLocalPV/zfslocalpv.json
          datasource: Prometheus
